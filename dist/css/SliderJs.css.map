{"version":3,"file":"css/SliderJs.css","mappings":";;;AA2JA;EACE;KAAA;MAAA;UAAA;EA7HA,2BA8HgB;EA9HhB,2BA8HgB;EA9HhB,oBA8HgB;EA7HhB,8BAFwD;EAExD,6BAFwD;MAExD,uBAFwD;UAExD,mBAFwD;EAOtD;MAAA;UAAA;AAhCJ;AA0JE;EACE;EACA;AAxJJ;AA0JI;EAEE,YADe;EAEf,WAFe;AAvJrB;AA0JM;EAEE,cAD4B;EAE5B,aAF4B;AAvJpC;AA8JE;EACE;AA5JJ;AA+JE;EACE;EACA;EACA,kBA3KW;EA4KX,yBAhLU;AAmBd;AAgKE;EACE;EACA,yBApLU;EAqLV,kBAlLW;AAoBf;AAiKE;EAjKA,oBADwB;EACxB,oBADwB;EACxB,aADwB;EAExB,8BAFwD;EAExD,6BAFwD;MAExD,uBAFwD;UAExD,mBAFwD;EAItD;MAAA;UAAA;EACA;MAAA;UAAA;EA+JA,YApLW;EAqLX,WArLW;EAsLX;EACA,yBA7LU;EA8LV;AA5JJ;AA6JI;EACE;EACA,YAhLe;EAiLf,WAjLe;EAkLf;EACA;AA3JN;AA8JE;EACE,yBA3MY;EA4MZ,cA3MiB;EA4MjB;EACA,gBApMa;EAqMb,eApMY;EAed,2BAsLkB;EAtLlB,2BAsLkB;EAtLlB,oBAsLkB;EArLlB,8BAFwD;EAExD,6BAFwD;MAExD,uBAFwD;UAExD,mBAFwD;EAItD;MAAA;UAAA;EACA;MAAA;UAAA;EAmLA;AAzJJ;AA0JI;EACE;EACA;EACA,YAvMe;EAwMf,WAxMe;EAyMf;EACA;AAxJN;AA4JI;EAII;EACA;EAAA;MAAA;UAAA;AA7JR;AAgKM;EAvFA,gBArIqB;EAsIrB,mBAtIqB;EAwIvB,aAzIU;EA0IV,UA3IW;AAoEf;AA8JM;EAhHF;EACA;EACA,UApHW;EAqHX;UAAA;EACA,SA/Ga;AAoEjB;AA2JM;EA3IF;EACA;EACA;UAAA;EACA;EACA;AAbJ;AAoII;EAEI;AAnIR;AAyIM;EA9FA,iBA9HqB;EA+HrB,kBA/HqB;EAiIvB,WAnIW;EAoIX,YAnIU;AA0Fd;AAuIM;EAtHF;EACA;EACA,QAvGa;EAwGb;UAAA;EACA,WAhHW;AAkGf;AAoIM;EArIF;EACA;EACA;UAAA;AAIJ;AAsII;EAjLA;EACA;UAAA;EAME;AAyCN;AAxEE;EAaI;EAEF;UAAA;AA6DJ;AA6HI;EAjLA;EACA;UAAA;EAEE;AAsDN;AAjFE;EAUI;EAKF;UAAA;AAsEJ;AAoHI;EArKA;EACA;UAAA;EAEE;AAmDN;AA1FE;EAII;EAWF;UAAA;AA+EJ;AA2GI;EArKA;EACA;UAAA;EAME;AAwDN;AAnGE;EAOI;EAQF;UAAA;AAwFJ;AAwGE;EAEE;EACA;AAvGJ,C","sources":["webpack://SJ/./src/scss/SliderJs.scss"],"sourcesContent":["@use 'sass:math';\r\n// ! Documentation:\r\n// ? Start with the name of the element and then the type of info the variable holds: thumb[-color]\r\n// ? The name of the pseudo-elements in the variables must be preceded by an underscore as follows: thumb[_after]-color.\r\n// Colors\r\n$tooltip-color: #3a0ca3;\r\n$tooltip-text-color: #ffffff;\r\n$track-color: #e4e4e4;\r\n$thumb-color: #f72585;\r\n$progress-color: $thumb-color;\r\n// Dimensions\r\n$track-height: 5px;\r\n$track-width: 300px;\r\n$track-horizontal-spacing: 20px;\r\n$thumb-radius: 20px;\r\n$tooltip-height: 30px;\r\n$tooltip-width: 90px;\r\n$progress-height: $track-height;\r\n$progress-width: 0;\r\n$tooltip-caret-side: 15px;\r\n$tooltip-caret-half-side: math.div($tooltip-caret-side, 2);\r\n// Orientation\r\n$directions: 'right', 'left', 'top', 'bottom';\r\n$axes: 'vertical', 'horizontal';\r\n// Calculations\r\n$thumb_after-radius: math.div($thumb-radius * 60, 100);\r\n// @Mixins\r\n// =============================================>\r\n//** @center (flex-type: flex | inline-flex, axis: both | main | cross, flex-dir: flex-direction values)\r\n// ? Center elements inside a container using flexbox\r\n@mixin center($flex-type: flex, $axis: 'both', $flex-dir: row) {\r\n  display: $flex-type;\r\n  flex-direction: $flex-dir;\r\n  @if ($axis == 'both') {\r\n    justify-content: center;\r\n    align-items: center;\r\n  } @else if ($axis == 'cross') {\r\n    align-items: center;\r\n  } @else if ($axis == 'main') {\r\n    justify-content: center;\r\n  }\r\n}\r\n// ===============================================>\r\n// ===============================================>\r\n//** @caret (direction: left | right | top | bottom)\r\n// ? Lay out tooltip caret style based on direction argument ,direction to opposite direction [top means from top to bottom]\r\n@mixin caret($direction: 'left') {\r\n  &::before {\r\n    $transform: null;\r\n    @if ($direction == 'top') {\r\n      $transform: translateY($tooltip-height - $tooltip-caret-half-side);\r\n      top: 0;\r\n    } @else if ($direction == 'bottom') {\r\n      $transform: translateY(-$tooltip-caret-half-side);\r\n      top: 0;\r\n    } @else if ($direction == 'left') {\r\n      $transform: translateX($tooltip-width - $tooltip-caret-half-side);\r\n      left: 0;\r\n    } @else if ($direction == 'right') {\r\n      $transform: translateX(-$tooltip-caret-half-side);\r\n      left: 0;\r\n    }\r\n    transform: #{$transform} rotate(45deg);\r\n  }\r\n}\r\n// ===============================================>\r\n// ===============================================>\r\n// ** tooltip(direction: left | right | bottom | top)\r\n// ? Lay out tooltip styles based on its direction\r\n@mixin tooltip($direction: 'left') {\r\n  @if ($direction == 'left' or $direction == 'right') {\r\n    top: 100%;\r\n    transform: translateY(-50%);\r\n    @if ($direction == 'left') {\r\n      left: -$tooltip-caret-side -\r\n        $tooltip-width -\r\n        math.div($tooltip-caret-side, 2);\r\n    } @else {\r\n      left: $progress-height +\r\n        $tooltip-caret-side +\r\n        math.div($tooltip-caret-side, 2);\r\n    }\r\n  } @else if ($direction == 'top' or $direction == 'bottom') {\r\n    left: 100%;\r\n    transform: translateX(-50%);\r\n    @if ($direction == 'top') {\r\n      top: -$tooltip-height -\r\n        $tooltip-caret-side -\r\n        math.div($tooltip-caret-side, 2);\r\n    } @else {\r\n      top: $progress-height +\r\n        $tooltip-caret-side +\r\n        math.div($tooltip-caret-side, 2);\r\n    }\r\n  }\r\n}\r\n// ===============================================>\r\n// ===============================================>\r\n//** thumb(axe: vertical | horizontal)\r\n// ? Lay out thumb based on slider axe\r\n@mixin thumb($axe: 'vertical') {\r\n  @if ($axe == 'vertical') {\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translate(-50%, 50%);\r\n    top: auto;\r\n    right: auto;\r\n  } @else if ($axe == 'horizontal') {\r\n    right: 0;\r\n    top: 50%;\r\n    transform: translate(50%, -50%);\r\n  }\r\n}\r\n// ===============================================>\r\n// ===============================================>\r\n//** progress(axe: vertical | horizontal)\r\n// ? Lay out progress based on slider axe\r\n@mixin progress($axe: 'vertical') {\r\n  @if ($axe == 'horizontal') {\r\n    top: 50%;\r\n    left: 0;\r\n    width: $progress-width;\r\n    transform: translateY(-50%);\r\n    height: $progress-height;\r\n  } @else if ($axe == 'vertical') {\r\n    top: 0;\r\n    left: 50%;\r\n    width: $progress-height;\r\n    transform: translateX(-50%);\r\n    height: $progress-width;\r\n  }\r\n}\r\n// ===============================================>\r\n// ===============================================>\r\n//** track(axe: vertical | horizontal)\r\n// ? Lay out track based on slider axe\r\n@mixin track($axe: 'vertical') {\r\n  @if ($axe == 'horizontal') {\r\n    margin: {\r\n      left: $track-horizontal-spacing;\r\n      right: $track-horizontal-spacing;\r\n    }\r\n    height: $track-height;\r\n    width: $track-width;\r\n  } @else if ($axe: 'vertical') {\r\n    margin: {\r\n      top: $track-horizontal-spacing;\r\n      bottom: $track-horizontal-spacing;\r\n    }\r\n    height: $track-width;\r\n    width: $track-height;\r\n  }\r\n}\r\n// ===============================================>\r\n// ** Slider\r\n.sj {\r\n  user-select: none;\r\n  @include center(inline-flex, 'cross');\r\n  // Put an outline when focus on the slider\r\n  &:focus {\r\n    outline: none;\r\n    border: 2px dashed #343434;\r\n    // Increase thumb size\r\n    &-thumb {\r\n      $thumb-active: $thumb-radius * 1.4;\r\n      height: $thumb-active;\r\n      width: $thumb-active;\r\n      &::after {\r\n        $thumb-active-after-radius: $thumb_after-radius * 1.4;\r\n        height: $thumb-active-after-radius;\r\n        width: $thumb-active-after-radius;\r\n      }\r\n    }\r\n  }\r\n  // Make slider container inline block like the default browser range\r\n  &-container {\r\n    display: inline-block;\r\n  }\r\n  // Track\r\n  &-track {\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: $track-height;\r\n    background-color: $track-color;\r\n  }\r\n  // Progress\r\n  &-progress {\r\n    position: absolute;\r\n    background-color: $progress-color;\r\n    border-radius: $progress-height;\r\n  }\r\n  // Thumb\r\n  &-thumb {\r\n    @include center;\r\n    height: $thumb-radius;\r\n    width: $thumb-radius;\r\n    border-radius: 50%;\r\n    background-color: $thumb-color;\r\n    position: absolute;\r\n    &::after {\r\n      content: '';\r\n      height: $thumb_after-radius;\r\n      width: $thumb_after-radius;\r\n      border-radius: 50%;\r\n      background-color: #fff;\r\n    }\r\n  }\r\n  &-tooltip {\r\n    background-color: $tooltip-color;\r\n    color: $tooltip-text-color;\r\n    position: absolute;\r\n    min-height: $tooltip-height;\r\n    min-width: $tooltip-width;\r\n    @include center(inline-flex);\r\n    z-index: 99;\r\n    &::before {\r\n      content: '';\r\n      z-index: -1;\r\n      height: $tooltip-caret-side;\r\n      width: $tooltip-caret-side;\r\n      background-color: inherit;\r\n      position: absolute;\r\n    }\r\n  }\r\n  @each $axe in $axes {\r\n    &-#{$axe} {\r\n      @if ($axe == 'horizontal') {\r\n        padding: 10px 15px;\r\n      } @else {\r\n        padding: 15px 10px;\r\n        flex-direction: column;\r\n      }\r\n      // Tracks\r\n      .sj-track {\r\n        @include track($axe);\r\n      }\r\n      // Progress\r\n      .sj-progress {\r\n        @include progress($axe);\r\n      }\r\n      // Thumbs\r\n      .sj-thumb {\r\n        @include thumb($axe);\r\n      }\r\n    }\r\n  }\r\n  // Tooltips\r\n  @each $direction in $directions {\r\n    &-tooltip-#{$direction} {\r\n      @include tooltip($direction);\r\n      @include caret($direction);\r\n    }\r\n  }\r\n  //  Slider min and max values\r\n  &-min,\r\n  &-max {\r\n    color: #757575;\r\n    font-size: 1rem;\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}